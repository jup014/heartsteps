version: '2'

services:
  anti-sedentary-service:
    build: ./anti-sedentary-service
    command: python app.py
    volumes:
      - ./anti-sedentary-service:/anti-sedentary-service
      - ./credentials:/credentials
    privileged: true
    ports:
      - "5001:8000"
  client:
    build: ./client
    env_file:
      - .env-development
    command: ionic serve
    volumes:
      - ./client:/client
      - ./credentials:/credentials
      - client-platforms:/client/platforms
      - client-node-modules:/client/node_modules
      - client-gradle-cache:/root/.gradle/caches
    ports:
      - "8100:8100"
      - "35729:35729"
      - "53703:53703"
    depends_on:
      - db
      - rabbitmq
      - server
  cloudsql:
    image: gcr.io/cloudsql-docker/gce-proxy:1.11
    command: /cloud_sql_proxy -dir=/cloudsql -instances=heartsteps-kpwhri:us-west1:heartsteps-kpw -credential_file=/credentials/gce.json
    volumes:
      - cloudsql:/cloudsql
      - ./credentials:/credentials
  db:
    environment: 
      - POSTGRES_PASSWORD=password
    image: postgres:10
    volumes:
      - pgdata:/var/lib/postgresql/data
  heartsteps-app:
    command: npm run serve:app
    depends_on:
      - server
    env_file:
      - .env-development
    image: heartsteps_client
    ports:
      - "8200:8100"
      - "35729:35729"
      - "53703:53703"
    volumes:
      - ./client:/client
      - ./credentials:/credentials
      - client-platforms:/client/platforms
      - client-node-modules:/client/node_modules
      - client-gradle-cache:/root/.gradle/caches
  heartsteps-website:
    command: npm run serve:website
    depends_on:
      - server
    env_file:
      - .env-development
    image: heartsteps_client
    ports:
      - "8300:8100"
      - "35729:35729"
      - "53703:53703"
    volumes:
      - ./client:/client
      - ./credentials:/credentials
      - client-node-modules:/client/node_modules
  nginx:
    build: ./nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "8000:8000"
    depends_on:
      - server
  pooling-service:
      build: ./pooling-service
      command: python app.py
      volumes:
        - ./pooling-service:/pooling-service
        - ./credentials:/credentials
      ports:
        - "8888:8893"
        - "5002:8000"
  pooling-service-gcloud:
    image: heartsteps_pooling-service
    command: bash -c "mkdir -p ./data && rm -rf ./data/* && gcsfuse --implicit-dirs walking-suggestions-data ./data && python app.py"
    volumes:
      - ./pooling-service:/pooling-service
      - ./credentials:/credentials
    ports:
      - "5002:8000"
    privileged: true
  rabbitmq:
    image: rabbitmq:3.7
  service-template:
    build:
      context: ./
      dockerfile: ./service-template/Dockerfile
    volumes:
      - ./service-template/utils:/utils
  server:
    build: ./server
    env_file:
      - .env-development
    environment:
      - ALLOWED_HOSTS=localhost,server,192.168.99.100
      - DEBUG=True
      - DATABASE_URL=psql://postgres:password@db:5432/postgres
    command: ["honcho", "start", "dev"]
    volumes:
      - ./server:/server
      - ./credentials:/credentials
    ports:
      - "8080:8080"
    depends_on:
      - db
      - rabbitmq
  server-gcloud:
    command: honcho start dev
    env_file:
      - .env-production
    environment:
      - ALLOWED_HOSTS=localhost
      - DEBUG=True
      - DATABASE_URL=psql://heartsteps:heartsteps@/heartsteps?host=/cloudsql/heartsteps-kpwhri:us-west1:heartsteps-kpw
    image: heartsteps_server
    ports:
      - "8080:8080"
    depends_on:
      - cloudsql
      - rabbitmq
    volumes:
      - ./server:/server-gcloud
      - cloudsql:/cloudsql
    working_dir: /server-gcloud
  walking-suggestion-service:
    build: ./walking-suggestion-service
    command: python app.py
    volumes:
      - ./walking-suggestion-service:/walking-suggestion-service
      - ./credentials:/credentials
    ports:
      - "5000:8080"
    privileged: true
  walking-suggestion-service-gcloud:
    image: heartsteps_walking-suggestion-service
    ports:
      - "5100:8080"
    privileged: true
    volumes:
      - ./walking-suggestion-service:/walking-suggestion-service
      - walking-suggestion-service-data:/walking-suggestion-service/data
      - ./credentials:/credentials
  worker-other:
    command: honcho start celery
    image: heartsteps_server
    depends_on:
      - rabbitmq
      - server
    env_file:
      - .env-development
    environment:
      - ALLOWED_HOSTS=localhost,server,192.168.99.100
      - DEBUG=True
      - DATABASE_URL=psql://postgres@db:5432/postgres
  worker:
    command: honcho start celery
    image: heartsteps_server
    depends_on:
      - rabbitmq
      - server
    env_file:
      - .env-development
    environment:
      - ALLOWED_HOSTS=localhost,server,192.168.99.100
      - DEBUG=True
      - DATABASE_URL=psql://postgres@db:5432/postgres
  worker-beat:
    command: honcho start beat
    image: heartsteps_server
    depends_on:
      - rabbitmq
      - server
    env_file:
      - .env-development
    environment:
      - ALLOWED_HOSTS=localhost,server,192.168.99.100
      - DEBUG=True
      - DATABASE_URL=psql://postgres@db:5432/postgres
  flower:
    image: mher/flower
    command: ["flower", "--broker=amqp://guest:guest@rabbitmq:5672//", "--port=8888"]
    ports:
      - 8888:8888
    depends_on:
      - rabbitmq
      - server
      - worker
      - worker-other
      - worker-beat
volumes:
  client-platforms:
  client-node-modules:
  pgdata:
  client-gradle-cache:
  cloudsql:
  walking-suggestion-service-data:
