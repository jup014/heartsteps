version: '2'

services:
  db:
    image: postgres
    volumes:
      - pgdata:/var/lib/postgresql/data
  rabbitmq:
    image: rabbitmq:3.7
  service-template:
    build:
      context: ./
      dockerfile: ./service-template/Dockerfile
    volumes:
      - ./service-template/utils:/utils
  walking-suggestion-service:
    build: ./walking-suggestion-service
    command: python app.py
    volumes:
      - ./walking-suggestion-service:/walking-suggestion-service
      - ./credentials:/credentials
    ports:
      - "5000:8080"
    privileged: true
  pooling-service:
      build: ./pooling-service
      volumes:
        - ./pooling-service:/pooling-service
        - ./credentials:/credentials
      ports:
        - "8888:8893"
      privileged: true
  anti-sedentary-service:
    build: ./anti-sedentary-service
    command: python app.py
    volumes:
      - ./anti-sedentary-service:/anti-sedentary-service
      - ./credentials:/credentials
    privileged: true
    ports:
      - "5001:8000"
  server:
    build: ./server
    env_file:
      - .env-development 
    command: honcho start dev celery
    volumes:
      - ./server:/server
      - ./credentials:/credentials
    ports:
      - "8080:8080"
    depends_on:
      - db
      - rabbitmq
  client:
    build: ./client
    env_file:
      - .env-development
    command: ionic serve
    volumes:
      - ./client:/client
      - ./credentials:/credentials
      - client-node-modules:/client/node_modules
      - client-gradle-cache:/root/.gradle/caches
    ports:
      - "8100:8100"
      - "35729:35729"
      - "53703:53703"
    depends_on:
      - db
      - server
    privileged: true
volumes:
  client-node-modules:
  pgdata:
  client-gradle-cache:
