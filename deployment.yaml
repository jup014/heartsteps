
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: walking-suggestion-service
  labels:
    app: walking-suggestion-service
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: walking-suggestion-service
    spec:
      containers:
      - name: walking-suggestion-service
        image: gcr.io/heartsteps-kpwhri/walking-suggestion-service:latest
        imagePullPolicy: Always
        securityContext:
          privileged: true
        ports:
        - containerPort: 8080
        env:
        - name: BUILD_NUMBER
          value: DEFAULT_BUILD_NUMBER

---

apiVersion: v1
kind: Service
metadata:
  name: walking-suggestion
  labels:
    run: walking-suggestion
spec:
  ports:
  - port: 8080
    targetPort: 8080
  selector:
    app: walking-suggestion-service

---

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: anti-sedentary-service
  labels:
    app: anti-sedentary-service
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: anti-sedentary-service
    spec:
      containers:
      - name: anti-sedentary-service
        image: gcr.io/heartsteps-kpwhri/anti-sedentary-service:latest
        imagePullPolicy: Always
        securityContext:
          privileged: true
        ports:
        - containerPort: 8080
        env:
        - name: BUILD_NUMBER
          value: DEFAULT_BUILD_NUMBER

---

apiVersion: v1
kind: Service
metadata:
  name: anti-sedentary
  labels:
    run: anti-sedentary
spec:
  ports:
  - port: 8080
    targetPort: 8080
  selector:
    app: anti-sedentary-service

---

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: rabbitmq
  labels:
    app: rabbitmq
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      containers:
      - name: rabbitmq
        image: rabbitmq:3.7
        ports:
        - containerPort: 5672

---

apiVersion: v1
kind: Service
metadata:
  name: rabbitmq
  labels:
    run: rabbitmq
spec:
  ports:
  - port: 5672
    targetPort: 5672
  selector:
    app: rabbitmq

---

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: heartsteps-worker
  labels:
    app: heartsteps-worker
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: heartsteps-worker
    spec:
      containers:
      - name: heartsteps-celery-app
        image: gcr.io/heartsteps-kpwhri/heartsteps-server:latest
        imagePullPolicy: Always
        command: ['honcho', 'start', 'cloudsql', 'celery']
        env:
          - name: BUILD_NUMBER
            value: DEFAULT_BUILD_NUMBER
          - name: SECRET_KEY
            value: 'ka6p=i&71njyh)hw%amk)p1)(a=u$#gpck-8!%^^51f^7g7b8o'
          - name: DATABASE_URL
            value: 'psql://heartsteps:heartsteps@/heartsteps?host=/cloudsql/heartsteps-kpwhri:us-west1:heartsteps-kpw'
          - name: ANTI_SEDENTARY_SERVICE_URL
            value: 'http://anti-sedentary:8080'
          - name: WALKING_SUGGESTION_SERVICE_URL
            value: 'http://walking-suggestion:8080'

---

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: heartsteps-server
  labels:
    app: heartsteps-server
spec:
  replicas: 2
  template:
    metadata:
      labels:
        app: heartsteps-server
    spec:
      containers:
      - name: heartsteps-app
        image: gcr.io/heartsteps-kpwhri/heartsteps-server:latest
        imagePullPolicy: Always
        command: ['honcho', 'start', 'cloudsql', 'web']
        env:
          - name: BUILD_NUMBER
            value: DEFAULT_BUILD_NUMBER
          - name: ALLOWED_HOSTS
            value: '35.186.201.20,heartsteps.net,heartsteps-service,heartsteps.nickreid.com'
          - name: SECRET_KEY
            value: 'ka6p=i&71njyh)hw%amk)p1)(a=u$#gpck-8!%^^51f^7g7b8o'
          - name: DATABASE_URL
            value: 'psql://heartsteps:heartsteps@/heartsteps?host=/cloudsql/heartsteps-kpwhri:us-west1:heartsteps-kpw'
          - name: ANTI_SEDENTARY_SERVICE_URL
            value: 'http://anti-sedentary:8080'
          - name: WALKING_SUGGESTION_SERVICE_URL
            value: 'http://walking-suggestion:8080'
        ports:
        - containerPort: 8080
        livenessProbe:
          httpGet:
            path: /privacy-policy
            port: 8080
            httpHeaders:
              - name: Host
                value: heartsteps-service
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /privacy-policy
            port: 8080
            httpHeaders:
              - name: Host
                value: heartsteps-service
          initialDelaySeconds: 30
          periodSeconds: 10

---

apiVersion: v1
kind: Service
metadata:
  name: server
  labels:
    app: heartsteps-server
spec:
  ports:
  - port: 8080
    targetPort: 8080
  selector:
    app: heartsteps-server

---

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: heartsteps-nginx
  labels:
    app: heartsteps-nginx
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: heartsteps-nginx
    spec:
      containers:
      - name: nginx
        image: gcr.io/heartsteps-kpwhri/heartsteps-nginx
        imagePullPolicy: Always
        env:
          - name: BUILD_NUMBER
            value: DEFAULT_BUILD_NUMBER
        ports:
        - containerPort: 8000

---

apiVersion: v1
kind: Service
metadata:
  name: heartsteps-nginx
  labels:
    app: heartsteps-nginx
spec:
  type: NodePort
  ports:
  - port: 8000
    targetPort: 8000
  selector:
    app: heartsteps-nginx

---

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: heartsteps
  annotations:
    kubernetes.io/ingress.global-static-ip-name: heartsteps-global
    kubernetes.io/ingress.allow-http: "false"
spec:
  backend:
    serviceName: heartsteps-nginx
    servicePort: 8000
